<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Azure on Maloy Manna</title>
    <link>https://maloymanna.github.io/categories/azure/</link>
    <description>Recent content in Azure on Maloy Manna</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2007 - 2025. All rights reserved.</copyright>
    <lastBuildDate>Sun, 09 Apr 2023 08:15:22 +0000</lastBuildDate>
    <atom:link href="https://maloymanna.github.io/categories/azure/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Identity Basics 2 - Permissions, Scopes and Consent</title>
      <link>https://maloymanna.github.io/2023/04/09/identity-basics-2-permissions-scopes-consent/</link>
      <pubDate>Sun, 09 Apr 2023 08:15:22 +0000</pubDate>
      <guid>https://maloymanna.github.io/2023/04/09/identity-basics-2-permissions-scopes-consent/</guid>
      <description>&lt;p&gt;In my previous post, we saw how app registrations add identity configurations for applications on Azure AD. Just like a user, an application would also require access to resources like Microsoft Graph, which need authorization. The resource owner can grant(consent) or deny this authorization to the application.&#xA;There are mainly 2 &lt;em&gt;access scenarios&lt;/em&gt;:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;Delegated access&lt;/strong&gt; - access on behalf of a signed-in user.&#xA;User is signed-into a client application, which access the resource on behalf of the user. This requires &lt;em&gt;delegated permissions&lt;/em&gt; (also referred to as &lt;em&gt;scopes&lt;/em&gt;). All scenarios involving user actions should use delegated access. Also, scopes should be limited using the principle of least-privilege.&lt;br&gt;&#xA;&lt;a href=&#34;https://learn.microsoft.com/en-us/graph/permissions-reference&#34;&gt;See also: the full list of Microsoft Graph permissions&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;App-only access&lt;/strong&gt; - access without a user, as the application&amp;rsquo;s own identity. This scenario is when the application runs as a background service or daemon used for automation or backup, or the data can&amp;rsquo;t be scoped to a single user. The client app needs to be granted appropriate application roles of the resource app it&amp;rsquo;s calling to access the requested data. Application roles granted through consent are called &lt;em&gt;application permissions&lt;/em&gt;.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://maloymanna.github.io/post/access-scenarios.png&#34; alt=&#34;Access Scenarios&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Identity Basics 1 - Application Registrations</title>
      <link>https://maloymanna.github.io/2023/03/18/identity-basics-1-app-registrations/</link>
      <pubDate>Sat, 18 Mar 2023 17:04:19 +0000</pubDate>
      <guid>https://maloymanna.github.io/2023/03/18/identity-basics-1-app-registrations/</guid>
      <description>&lt;p&gt;For some time now, I&amp;rsquo;ve been working on security risk assessments of web applications. Modern identity management can be complex and often requires diving deep into the authentication flow and registration process to understand risk blocks in order to design appropriate controls and counter-measures. I hope to write a short series of posts to document the components and flows of this process, so that it can be my handy reference.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Modern authentication fundamentals</title>
      <link>https://maloymanna.github.io/2022/11/12/modern-authentication-fundamentals/</link>
      <pubDate>Sat, 12 Nov 2022 07:05:09 +0000</pubDate>
      <guid>https://maloymanna.github.io/2022/11/12/modern-authentication-fundamentals/</guid>
      <description>&lt;p&gt;In my post on &lt;a href=&#34;https://maloymanna.github.io/2022/09/18/azure-iam-fundamentals&#34;&gt;Identity and Access Management (IAM)&lt;/a&gt;, I provided a very high-level view of how modern authentication works on the basis of a centralized Identity provider, like Azure Active Directory.&lt;/p&gt;&#xA;&lt;p&gt;In this post, let&amp;rsquo;s look at a Microsoft Azure video, where Azure AD Program manager &lt;a href=&#34;https://www.linkedin.com/in/stuartkwan/&#34;&gt;Stuart Kwan&lt;/a&gt; presents the basics of modern claims-based authentication in a lucid and eloquent way.&#xA;Clearly if a picture is worth a thousand words, a video is probably worth a million!&lt;/p&gt;</description>
    </item>
    <item>
      <title>Azure Security - Service endpoint vs Private endpoint</title>
      <link>https://maloymanna.github.io/2022/10/02/azure-security-service-endpoint-vs-private-endpoint/</link>
      <pubDate>Sun, 02 Oct 2022 11:26:19 +0000</pubDate>
      <guid>https://maloymanna.github.io/2022/10/02/azure-security-service-endpoint-vs-private-endpoint/</guid>
      <description>&lt;p&gt;&lt;span style=&#34;color: blue;&#34;&gt;Endpoints &lt;/span&gt; are a critical aspect of securing your resources in the cloud. When using Azure PaaS services, it is important to understand the differences between two types of endpoint available in Azure: service endpoint and private endpoint.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Service endpoint:&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;A &lt;strong&gt;service endpoint&lt;/strong&gt; is a way of extending your virtual networkâ€™s private address space to Azure services over the Azure backbone network. When a service endpoint is enabled, traffic between your virtual network and the Azure service of your choice stays on the Azure backbone network, rather than going over the public internet. This provides better security and performance for your resources.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Azure IAM fundamentals</title>
      <link>https://maloymanna.github.io/2022/09/18/azure-iam-fundamentals/</link>
      <pubDate>Sun, 18 Sep 2022 07:43:21 +0000</pubDate>
      <guid>https://maloymanna.github.io/2022/09/18/azure-iam-fundamentals/</guid>
      <description>&lt;p&gt;&lt;span style=&#34;color: blue;&#34;&gt;Identity and Access Management (IAM) &lt;/span&gt; is a framework of policies and technologies to ensure the right people or machines to access the right assets or resources.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Identity:&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;In this digital age, an &lt;strong&gt;identity&lt;/strong&gt; can be either a human (user), a software component (application) or a hardware component (computer, mobile or IoT device). Just like any identity document in the real-world, identities serve is a way to authenticate and authorize access to assets and resources.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Azure Control plane and Data plane</title>
      <link>https://maloymanna.github.io/2022/08/24/azure-control-plane-data-plane/</link>
      <pubDate>Wed, 24 Aug 2022 21:30:11 +0000</pubDate>
      <guid>https://maloymanna.github.io/2022/08/24/azure-control-plane-data-plane/</guid>
      <description>&lt;p&gt;Azure operations can be divided into 2 categories:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;Control plane (or Management plane)&lt;/strong&gt; - used to manage resources in azure subscriptions, e.g. creation of a virtual machine or a storage account&#xA;All requests for control plane operations are sent to the Azure Resource Manager URL. For Azure global, the url is: &lt;a href=&#34;https://management.azure.com&#34;&gt;https://management.azure.com&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;Data plane&lt;/strong&gt; - used to manage capabilties exposed by instances of resource types e.g. using remote desktop protocol (RDP) to interact with a virtual machine, or reading/writing data in a storage account.&#xA;Requests for data plane operations are sent to an endpoint specific to the instance of the resource type e.g. &lt;a href=&#34;https://myname.blob.core.windows.net&#34;&gt;https://myname.blob.core.windows.net&lt;/a&gt;&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
